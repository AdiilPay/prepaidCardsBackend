name: Deploy Docker Application

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ghcr.io/adiilpay/prepaidcardsbackend:latest
  DOCKER_COMPOSE_FILE: docker-compose.yml
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  REMOTE_USER: ${{ secrets.SSH_USERNAME }}
  REMOTE_HOST: ${{ secrets.SSH_HOST }}
  REMOTE_DOCKER_COMPOSE_PATH: ~/api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image to GHCR
        run: docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create .env file with GitHub secrets
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" > .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "NO_TOKEN_EXPIRATION=${{ vars.NO_TOKEN_EXPIRATION }}" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Copy .env file to remote server
        run: scp -o StrictHostKeyChecking=no .env $REMOTE_USER@$REMOTE_HOST:$REMOTE_DOCKER_COMPOSE_PATH/.env

      - name: Copy docker-compose.yml to remote server
        run: scp -o StrictHostKeyChecking=no docker-compose.yml $REMOTE_USER@$REMOTE_HOST:$REMOTE_DOCKER_COMPOSE_PATH

      - name: Deploy application on remote server
        run: |
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
            cd $REMOTE_DOCKER_COMPOSE_PATH && \
            echo $(pwd) | tail -c 10 && \
            docker compose pull && \
            docker compose up -d echo 
          EOF
