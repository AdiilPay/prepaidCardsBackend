generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Admin {
  id             String        @id @default(uuid())
  organizationId String
  login          String        @unique @db.VarChar(255)
  password       String        @db.Char(60)
  organization   Organization  @relation(fields: [organizationId], references: [id])
  transactions   Transaction[]

  @@index([organizationId], map: "Admin_organizationId_fkey")
}

model Card {
  id             String        @id @default(uuid()) @db.Char(36)
  enabled        Boolean       @default(true)
  label          String        @db.VarChar(255)
  balance        Decimal       @default(0) @db.Decimal(10, 2)
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id])
  transactions   Transaction[]

  @@index([organizationId], map: "Card_organizationId_fkey")
}

model Organization {
  id              String  @id @default(uuid())
  accent_color    String  @default("#000000") @db.VarChar(7)
  name            String  @default("Organisation") @db.VarChar(255)
  primary_color   String  @default("#000000") @db.VarChar(7)
  secondary_color String  @default("#000000") @db.VarChar(7)
  admins          Admin[]
  cards           Card[]
}

model Transaction {
  id          String          @id @default(uuid()) @db.Char(36)
  date        DateTime        @default(now())
  amount      Decimal         @db.Decimal(10, 2)
  type        TransactionType
  description String          @default("") @db.Text
  cardId      String          @db.Char(36)
  adminId     String          @db.Char(36)
  admin       Admin?          @relation(fields: [adminId], references: [id])
  card        Card?           @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@index([adminId], map: "Transaction_adminId_fkey")
  @@index([cardId], map: "Transaction_cardId_fkey")
}

enum TransactionType {
  PAYMENT
  DEPOSIT
  REFUND
  WITHDRAWAL
  SYSTEM
}
